// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  username String @unique
  email    String @unique

  displayName String
  avatarUrl   String?

  createdMaps  HexMap[]
  createdGames Game[]
  players      Player[]
}

model HexMap {
  id        String @id @default(cuid())
  name      String
  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  published Boolean @default(false)

  cells Cell[]
  games Game[]

  @@index([creatorId])
}

enum CellType {
  PLAYER
  BUFF
}

model Cell {
  id   String   @id @default(cuid())
  x    Int
  y    Int
  type CellType

  mapId String
  map   HexMap @relation(fields: [mapId], references: [id])

  @@index([mapId, x, y])
}

enum GamePhase {
  LOBBY
  PREPARATION
  PLAYING
}

model Game {
  id String @id @default(cuid())

  map   HexMap @relation(fields: [mapId], references: [id])
  mapId String

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  players Player[]

  gameState Json?

  phase GamePhase @default(LOBBY)

}

model Player {
  id String @id @default(cuid())

  lastSeenActionId Int?
  setupState       Json?

  gameId String
  game   Game   @relation(fields: [gameId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])
}
