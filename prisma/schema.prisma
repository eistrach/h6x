// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  username String @unique
  email    String @unique

  displayName String
  avatarUrl   String?

  createdMaps  HexMap[]
  players      Player[]
  createdGames Game[]
}

model HexMap {
  id        String @id @default(cuid())
  name      String
  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  cells Cell[]
  games Game[]

  @@index([creatorId])
}

enum CellType {
  PLAYER
}

model Cell {
  id   String   @id @default(cuid())
  x    Int
  y    Int
  type CellType

  mapId String
  map   HexMap @relation(fields: [mapId], references: [id])

  gameCells GameCell[]

  @@index([mapId, x, y])
}

enum GamePhase {
  LOBBY
  PREPARATION
  PLAYING
}

model Game {
  id String @id @default(cuid())

  map   HexMap @relation(fields: [mapId], references: [id])
  mapId String

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id])

  phase GamePhase @default(LOBBY)

  players         Player[]
  executedActions Action[]
  turn            Int        @default(0)
  cells           GameCell[]
}

model GameCell {
  cell   Cell   @relation(fields: [cellId], references: [id])
  cellId String

  gameId String
  game   Game   @relation(fields: [gameId], references: [id])

  playerId String
  player   Player @relation(fields: [playerId], references: [id])

  attackUnits Int @default(1)

  @@id([gameId, cellId])
}

model Player {
  id       String @id @default(cuid())
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  position Int

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  money           Int        @default(150)
  executedActions Action[]
  cells           GameCell[]
}

enum ActionType {
  ATTACK
  BUY
}

model Action {
  id String @id @default(cuid())

  turn Int
  type ActionType

  args Json

  playerId String
  player   Player @relation(fields: [playerId], references: [id])

  gameId String
  game   Game   @relation(fields: [gameId], references: [id])
}
